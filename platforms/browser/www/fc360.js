"use strict";var FC360$=(function(){  const reportFieldID=0, /* Report ID field on query "Report list" */        reportFieldName=1, /* Name field on query "Report list" */        reportFieldDescr=2, /* Description field on query "Report list" */        reportFieldType=3, /* Type of report field on query "Report list" */        reportFieldParamIni=5,  /* Start of parameters fields on query "Report list" */        reportParams=8, /* Max parameters fields on query "Report list" */        reportParamInfos=4; /* Qty of parameter informations on query "Report list" */  var oPage={}, /* Context page. Ex: {name:"login",params:["id","name","date"],values:[9999,"Fulano","1/1/1980"]} */      isLogged=false, /* True if user is logged */      iStoreID=null, /* Current store ID */      sToken=null, /* current session token */      oStore={}, /* Store info */      oUser={}, /* Logged user info */      aReportList=[], /* Reports info */      bPaginationByPage=true, /* Controls type of report result pagination: true=by page false=by start/end record */      sTemplateFooter=null, /* Template for all footers */      sTemplateLogin=null, /* Template for login form */      sTemplateMain=null, /* Template for main menu */      sTemplateOffcanvas=null, /* Template for offcanvas menu */      sTemplateReportList=null, /* Template for report list */      sTemplateReportDetail=null, /* Template for report detail */      sTemplateDashboardTop=null, /* Template for dashboard top */      sTemplateReportType=null, /* Template for report type */      oMainDiv=null, /* main div container */      oLoginForm={}, /* Login form input and error fields */      oMainFields={}, /* Main fields */      oReportListFields={}, /* Report list fields */      oReportDetailFields={}; /* Report detail fields */  function main(){    loadContext();    oMainDiv=document.createElement("div");oMainDiv.id="fc360";oMainDiv.className="fc-login-overflow";document.body.appendChild(oMainDiv); /* Create main page div */    loadLoginMainTemplates();    if(oPage.name=="login" || typeof oPage.name=="undefined")showLoginForm();    else showMain();  }  function setLoginFocus(){  /* Set focus on first blank login field */    if(oLoginForm.oFieldStorename.value=="")oLoginForm.oFieldStorename.focus();    else if(oLoginForm.oFieldUsername.value=="")oLoginForm.oFieldUsername.focus();    else if(oLoginForm.oFieldPwd.value=="")oLoginForm.oFieldPwd.focus();    else oLoginForm.oButLogin.focus();  }  function saveContext(oNewPage){  /* Keep session context */    var oContext={};    oPage=oNewPage;    oContext={      oPage:oNewPage,      isLogged:isLogged,      iStoreID:iStoreID,      sToken:sToken,      oStore:oStore,      oUser:oUser,      aReportList:aReportList    };    window.sessionStorage.appContext=JSON.stringify(oContext);  }  function loadContext(){  /* Get session context */    var sContext=window.sessionStorage.appContext;    if(sContext){      try{var oContext=JSON.parse(sContext);}catch(e){var oContext=null;}      if(oContext){        oPage=oContext.oPage;        isLogged=oContext.isLogged;        iStoreID=oContext.iStoreID;FC360$.iStoreID=iStoreID;        sToken=oContext.sToken;FC360$.sToken=sToken;        oStore=oContext.oStore;        oUser=oContext.oUser;        aReportList=oContext.aReportList;      }    }  }  function validateLogin(bRemind,este){  /* Validate login form. Is bRemind, only reminds password */    if(bRemind)este.textContent=XYZ[25][iLang$]; /* Change remind link text */    else{      este.value=XYZ[25][iLang$]; /* Change button text to wait */      este.setAttribute("disabled","true"); /* Disable submit button */    }    oStore.storename=oLoginForm.oFieldStorename.value;    oStore.username=oLoginForm.oFieldUsername.value;    var pwd=oLoginForm.oFieldPwd.value;    var bFormOK=false;    if(oStore.storename.length<2)defineFieldError(true,oLoginForm.oFieldStorename,oLoginForm.oErrorStorename,XYZ[7][iLang$]); /* Validate storename */    else if(oStore.username.length<2)defineFieldError(true,oLoginForm.oFieldUsername,oLoginForm.oErrorUsername,XYZ[8][iLang$]); /* Validate username */    else if(pwd.length<6 && !bRemind)defineFieldError(true,oLoginForm.oFieldPwd,oLoginForm.oErrorPwd,(pwd.length<2?XYZ[9][iLang$]:XYZ[10][iLang$])); /* Validate password */    else bFormOK=true; /* form OK */    if(bFormOK){      defineFieldError(false,oLoginForm.oFieldStorename,oLoginForm.oErrorStorename,""); /* Clean storename error */      defineFieldError(false,oLoginForm.oFieldUsername,oLoginForm.oErrorUsername,""); /* Clean username error */      defineFieldError(false,oLoginForm.oFieldPwd,oLoginForm.oErrorPwd,""); /* Clean password error */      if(bRemind)remindPassword(este);      else loginUser(pwd,este);    }    return false; /* Avoid form post */  }  function defineFieldError(bShow,oField,oError,sMsg){  /* Toggle field validation msg */    if(bShow){      oField.classList.add("fc-login-error");      oError.textContent=sMsg;      oField.focus();    }    else{      oField.classList.remove("fc-login-error");      oError.textContent="";    }  }  function loadLoginMainTemplates(){  /* Load login and main templates */    sTemplateLogin=FC360$.sTemplateLogin;oMainDiv.innerHTML=sTemplateLogin; /* login template */    sTemplateMain=FC360$.sTemplateMain;oMainDiv.innerHTML+=sTemplateMain; /* main menu template */    /* Login fields */    oLoginForm={      oContainer:document.getElementById("fc-login-toggle"),      oFieldStorename:document.loginForm.storename,      oFieldUsername:document.loginForm.username,      oFieldPwd:document.loginForm.pwd,      oButLogin:document.loginForm.butLogin,      oErrorStorename:document.getElementById("fc-storename-error"),      oErrorUsername:document.getElementById("fc-username-error"),      oErrorPwd:document.getElementById("fc-password-error"),      oPasswordRemider:document.getElementById("fc-login-form-container-fields-forgot-password")    };    /* Main fields */    oMainFields={      oContainer:document.getElementById("fc-dashboard-toggle"),      oDashboardSection:document.getElementById("fc-dashboard-section"),      oFieldStorename:document.getElementById("fc-side-nav-storename"),      oFieldUsername:document.getElementById("fc-side-nav-user"),      oMainMenu:document.getElementById("main-menu"),      oDashBoxes:document.getElementById("dashBoxes"),      oPageTitle:document.getElementById("fc-dashboard-title-txt"),      oMainContent:document.getElementById("fc-main-content"),      oTopContent:document.getElementById("fc-top-content"),      oDetail:document.getElementById("fc-report-detail")    };  }  function getFieldsReportList(){  /* Get report field objects */    oReportListFields={      oContainer:document.getElementById("fc-reportlist-all"),      oMainTitle:document.getElementById("fc-reportlist-main-title"),      oTypes:document.getElementById("fc-reportlist-types"),      oFilterText:document.getElementById("fc-reportlist-filtertext")    }  }  function getFieldsReportDetail(){    oReportDetailFields={      oName:document.getElementById("fc-reportdetail-reportname"),      oDescr:document.getElementById("fc-reportdetail-reportdescr"),      oParams:document.getElementById("fc-reportdetail-reportparams"),      oForm:document.getElementById("reportParamsForm"),      oResults:document.getElementById("fc-reportdetail-results")    }  }  function loginUser(pwd,este){  /* Login user with password pwd */    var oLogin={cmd:"LIN",storename:oStore.storename,username:oStore.username,password:pwd};    callAdm360(oLogin,function(oJSON){      este.removeAttribute("disabled"); /* re-enable login button */      isLogged=(oJSON.err=="ErrOK");      if(isLogged){ /* login OK */        oStore.storename=oJSON.st;        oStore.username=oJSON.usr;        oLoginForm.oFieldStorename.value=oStore.storename; /* update form storename */        oLoginForm.oFieldUsername.value=oStore.username; /* update form username */        oLoginForm.oFieldPwd.value=""; /* clean password form field */        window.localStorage.storename=oStore.storename; /* save default storename */        window.localStorage.username=oStore.username; /* save default username */        iStoreID=oJSON.id;        FC360$.iStoreID=iStoreID;        sToken=oJSON.tk;        FC360$.sToken=sToken;        getUserInfo();      }      else{ /* Login error */        este.value=XYZ[6][iLang$]; /* restore button text */        showLoginError(oJSON.err); /* show login error */      }    });  }  function remindPassword(este){  /* Remind user password */    var oRemind={cmd:"PRM",storename:oStore.storename,username:oStore.username};    callAdm360(oRemind,function(oJSON){      este.innerHTML=`<a href="#" onclick="return FC360$.validateLogin(true,this.parentNode)">${XYZ[5][iLang$]}</a>` /* restore original remind link text */      if(oJSON.err=="ErrOK")oLoginForm.oPasswordRemider.textContent=XYZ[19][iLang$]; /* Password reminder sent by email */      else showLoginError(oJSON.err); /* Show remind error */    });  }  function logoutUser(){  /* Logout user */    var oLogout={cmd:"LOU",storeid:iStoreID,token:sToken};    oStore={};    oUser={};    aReportList=[];    iStoreID=null;    sToken=null;    oMainFields.oDashBoxes.textContent=""; /* Clean dashboxes */    saveContext({name:"login"});    showLoginForm();    callAdm360(oLogout,function(oJSON){});  }  function showLoginError(sErr){  /* Show login or remind error */    var iErrMsg,oField,oErrorField;    if(sErr=="ErrLoginInvSto"){iErrMsg=11;oField=oLoginForm.oFieldStorename;oErrorField=oLoginForm.oErrorStorename;} /* Invalid storename */    else if(sErr=="ErrLoginInvUsr"){iErrMsg=12;oField=oLoginForm.oFieldUsername;oErrorField=oLoginForm.oErrorUsername;} /* Invalid username or password */    else if(sErr=="ErrLoginInvIdt"){iErrMsg=13;oField=oLoginForm.oFieldPwd;oErrorField=oLoginForm.oErrorPwd;} /* Invalid password */    else if(sErr=="ErrLoginInvId3"){iErrMsg=14;oField=oLoginForm.oFieldPwd;oErrorField=oLoginForm.oErrorPwd;} /* Too many invalid password retries */    else if(sErr=="ErrLoginSusUsr"){iErrMsg=15;oField=oLoginForm.oFieldPwd;oErrorField=oLoginForm.oErrorPwd;} /* User suspended for 3 minutes */    else if(sErr=="ErrLoginInvUIP"){iErrMsg=16;oField=oLoginForm.oFieldUsername;oErrorField=oLoginForm.oErrorUsername;} /* Forbidden IP for user */    else if(sErr=="ErrLoginSusSto"){iErrMsg=17;oField=oLoginForm.oFieldStorename;oErrorField=oLoginForm.oErrorStorename;} /* Store suspended */    else if(sErr=="ErrLoginInvEml"){iErrMsg=20;oField=oLoginForm.oFieldUsername;oErrorField=oLoginForm.oErrorUsername;} /* No e-mail for password remind */    else if(sErr=="ErrLoginRemPwd"){iErrMsg=21;oField=oLoginForm.oFieldPwd;oErrorField=oLoginForm.oErrorPwd;} /* No password remind */    else{iErrMsg=18;oField=oLoginForm.oFieldStorename;oErrorField=oLoginForm.oErrorStorename;} /* Unknown error */    defineFieldError(true,oField,oErrorField,XYZ[iErrMsg][iLang$]); /* Show error */  }  function getUserInfo(){  /* Gets user general and access info */    var aActions=[{a:"r",t:"loginProperties",out:["access","lastInvalidAccess","lastPasswordChange","levelAccessQueries","partnerName","userEmail","username"]}];    var oUserInfo={cmd:"REG",storeid:iStoreID,token:sToken,actions:JSON.stringify(aActions)};    callAdm360(oUserInfo,function(oJSON){      if(oJSON.err=="ErrOK"){        var aData=oJSON.actions[0].data[0];        oUser.access=aData[0];        oUser.lastInvalidAccess=aData[1];        oUser.lastPasswordChange=aData[2];        oUser.levelAccessQueries=aData[3];        oUser.partnerName=aData[4];        oUser.email=aData[5];        oUser.username=aData[6];        showMain();      }    });  }  function getReportList(fnCallback){  /* Get report list from Adm360 or from aReportList. If bShowList, show report list */    if(aReportList.length==0){      var oReportList={cmd:"REL",storeid:iStoreID,token:sToken,objectname:"Report list",par3:iLang$};      callAdm360(oReportList,function(oJSON){        aReportList=oJSON.report.data;        fnCallback();      });    }    else fnCallback();  }  function showReportArray(){  /* Save context and show report list */    saveContext({name:"reportList"});    populateReportTypeList("");  }  function showAllReports(){  /* Show all reports */    oReportListFields.oFilterText.value="";    populateReportTypeList("");  }  function filterReportList(){  /* Filter report list */    var sSearch=oReportListFields.oFilterText.value;    populateReportTypeList(sSearch);    return false; /* Avoid form post */  }  function populateReportTypeList(sSearch){  /* Show reports grouped by type. Optionally can filter by sSearch */    oReportListFields.oTypes.innerHTML=""; /* Clean report list */    var aTypes=[],iTypes,iTotal=0,aTypeTotal=[],        iType,iTypePrev=null,        iReportList=aReportList.length,        sBuf="",aBufReports=[],        sReportName,sReportDescr;    for(var i=0;i<iReportList;i++){      iType=aReportList[i][reportFieldType]; /* Get report type */      if(iType!=iTypePrev){        aTypes.push(iType);        iTypePrev=iType;        aBufReports[iType]="";        aTypeTotal[iType]=0;      }      sReportName=aReportList[i][reportFieldName];      sReportDescr=aReportList[i][reportFieldDescr];      if(sSearch=="" || sReportName.toLowerCase().indexOf(sSearch.toLowerCase())>-1 || sReportDescr.toLowerCase().indexOf(sSearch.toLowerCase())>-1){        aBufReports[iType]+=`<li onclick="FC360$.showReportDetail(${i})" class="fc-dashboard-box-content-list-li"><div class="fc-dashboard-box-content-list-li-txt"><h4>${sReportName}</h4><p>${sReportDescr}</p></div></li>`;        aTypeTotal[iType]++;        iTotal++;      }    }    iTypes=aTypes.length;    for(var i=0;i<iTypes;i++)      if(aBufReports[aTypes[i]]){        sBuf+=FC360$.sTemplateReportType.replace("<fc-report-type-name>",FCAdmVars$.aSearchType[aTypes[i]] +" ("+ aTypeTotal[aTypes[i]] +")")                                        .replace("<fc-report-type-list>",aBufReports[aTypes[i]])                                        .replace(/&lt;a/gi,"<b")                                        .replace(/&lt;\/a/gi,"<\/b")                                        .replace(/&lt;/g,"<");    }    oReportListFields.oTypes.innerHTML=sBuf;    oReportListFields.oMainTitle.textContent=iTotal +" "+ XYZ[(iTotal>1?33:40)][iLang$]; /* Show report quantity */  }  function executeReport(){  /* Show report results */    var aParams=oReportDetailFields.oForm.querySelectorAll("[name^='Par']"),iParams=aParams.length,oParam,oParams={},sValue,IDReport;    for(var i=0;i<iParams;i++){      oParam=aParams[i];      if(oParam.type=="checkbox")sValue=(oParam.checked?1:"");      else if(oParam.type=="select-one")sValue=parseInt(oParam.options[oParam.selectedIndex].value);      else if(oParam.type=="select-multiple")sValue=Array.from(oParam.querySelectorAll("option:checked"),e=>e.value).join(",");      else if(oParam.type=="datetime-local")sValue=convertFromJSDate(oParam.value);      else sValue=escape(oParam.value);      oParams[oParam.name.toLowerCase()]=sValue;    }    oParams["fields"]=escape(oReportDetailFields.oForm.Fields.value);    if(bPaginationByPage){      oParams["page"]=parseInt(oReportDetailFields.oForm.Page.value);if(isNaN(oParams["page"]))oParams["page"]="";      oParams["qtrecords"]=parseInt(oReportDetailFields.oForm.QtRecords.value);if(isNaN(oParams["qtrecords"]))oParams["qtrecords"]="";    }    else{      oParams["fromrecord"]=parseInt(oReportDetailFields.oForm.FromRecord.value);if(isNaN(oParams["fromrecord"]))oParams["fromrecord"]="";      oParams["torecord"]=parseInt(oReportDetailFields.oForm.ToRecord.value);if(isNaN(oParams["torecord"]))oParams["torecord"]="";    }    oReportDetailFields.oResults.innerHTML=`<div class="fc-dashboard-box-content-result">${XYZ[42][iLang$]}</div><div id="fc-reportdetail-reportcontent"></div><div class="fc-dashboard-box-content-date"><p id="fc-reportdetail-date"></p></div>`;    var oReportContent=document.getElementById("fc-reportdetail-reportcontent");    IDReport=oReportDetailFields.oForm.ReportID.value;    oReportContent.innerHTML=FCAdmVars$.loadingIcon;    window.scrollBy(0,500);    getReportData(IDReport,oParams,oReportContent);    return false; /* Avoid form post */  }  function getReportData(IDReport,oParams,oReportContent){  /* Get report data from DB */    var aDataTable=[],aColumnTypes=[],        oReportData={cmd:"REL",storeid:iStoreID,token:sToken,objectid:IDReport};    oReportData=Object.assign({},oReportData,oParams);    callAdm360(oReportData,function(oJSON){      var oReportAll=oJSON.report;      if(oReportAll.records>0){        aDataTable.push(oReportAll.fields);        FCAdm$.addChartColTypes(aDataTable,oReportAll.fieldsTypes); /* Includes columns types in the first line of aDataTable. Types will be used by Google Chart */        aDataTable=aDataTable.concat(oReportAll.data);        getColumnTypes(oJSON,aColumnTypes);        var oDivLista=document.createElement("div");        oDivLista.className="dashList";        var oTable=FCAdm$.showTable(aDataTable,aColumnTypes,oDivLista,"",XYZ[28][iLang$],false);        FCAdm$.sortTable(oTable);        oReportContent.innerHTML="";        showReportExecDate();        var iChart=oReportAll.chartType;        if(iChart>=InicioGoogleCharts){          var oDivChart=document.createElement("div");          oDivChart.className="reportChart";          oReportContent.appendChild(oDivChart);          FCAdm$.initGoogleChart(function(){google.charts.setOnLoadCallback(function(){callbackGoogleChart(oReportAll,aDataTable,oDivChart);});});        }        oReportContent.appendChild(oDivLista);      }      else{        oReportContent.innerHTML="<div class='fc-reportdetail-reportcontent-not-found'>"+XYZ[51][iLang$];+"</div>" /* no records found */        showReportExecDate();      }    });  }  function showReportExecDate(){  /* show report execution date */    var oReportDate=document.getElementById("fc-reportdetail-date");    oReportDate.innerHTML=`${XYZ[43][iLang$]} ${new Date().toLocaleString(sLocale$,{day:"numeric",month:"numeric",year:"2-digit",hour:"numeric",minute:"numeric"})}`;  }  function callbackGoogleChart(oReportAll,aDataTable,oDivChart){    var sCustom=oReportAll.chartCustom,        iChart=(oReportAll.chartType)-InicioGoogleCharts,        aChartTable=[];    aChartTable=aChartTable.concat(aDataTable);    FCAdm$.convertChartDateFields(aChartTable);    var oGoogleData=google.visualization.arrayToDataTable(aChartTable);    var oChartOptions={};    if(sCustom!="")eval(sCustom);    var oChart=new google.visualization[aGoogleChartType[iChart]](oDivChart);    oChart.draw(oGoogleData,oChartOptions);  }  function getColumnTypes(oJSON,aColumnTypes){    var sDBType;    var aDBTypes=oJSON.report.dbTypes;    var iDBTypes=aDBTypes.length;    for(var i=0;i<iDBTypes;i++){      sDBType=aDBTypes[i];      var oItem={"type":sDBType,"hasTotal":(sDBType=="money" || sDBType=="real" || sDBType=="bigint")};      aColumnTypes.push(oItem);    }  }  function showLoginForm(){  /* Show login form */    oLoginForm.oButLogin.value=XYZ[6][iLang$]; /* restore button text */    oMainDiv.classList.remove("view-change");    oMainDiv.classList.add("fc-login-overflow");    hideObj(oMainFields.oMainMenu);    setTimeout(function(){      showObj(oLoginForm.oContainer);      setLoginFocus();      hideObj(oMainFields.oContainer);    },100);  }  function showMain(){  /* show main page */    oMainFields.oFieldStorename.textContent=oStore.storename; /* storename */    oMainFields.oFieldUsername.textContent=oStore.username; /* username */    if(oPage.name=="reportList")showReportList();    else showDash();    showObj(oMainFields.oContainer);    setTimeout(function(){      oMainDiv.classList.toggle("view-change");      oMainDiv.classList.remove("fc-login-overflow");      setTimeout(function(){showObj(oMainFields.oMainMenu);},500);    },100);  }  function showDash(){  /* Go to dashboard */    saveContext({name:"dash"});    oMainFields.oPageTitle.textContent=XYZ[39][iLang$];    oMainFields.oTopContent.innerHTML=FC360$.sTemplateDashboardTop;    oMainFields.oDashBoxes.textContent=""; /* Clean old Dashboxes */    oMainFields.oMainContent.textContent="";    hideObj(oMainFields.oDetail);    showObj(oMainFields.oDashboardSection);    initDashBoxes();  }  function showReportList(){  /* Go to report list */    oMainFields.oPageTitle.textContent=XYZ[22][iLang$];    oMainFields.oTopContent.textContent="";    oMainFields.oDashBoxes.textContent=""; /* Clean old Dashboxes */    oMainFields.oMainContent.innerHTML=FC360$.sTemplateReportList;    getFieldsReportList();    getReportList(function(){showReportArray();});    hideObj(oMainFields.oDetail);    showObj(oMainFields.oDashboardSection);  }  function showIDReportDetail(IDReport){    getReportList(function(){      var iReportList=aReportList.length,iReport=0;      while(iReport<iReportList && !(aReportList[iReport][reportFieldID]==IDReport))iReport++;      showReportDetail(iReport);    });  }  function showReportDetail(iReport){  /* Show details of report aReportList[iReport] */    oMainFields.oContainer.scrollIntoView();    hideObj(oMainFields.oDashboardSection);    oMainFields.oDetail.innerHTML=FC360$.sTemplateReportDetail;    getFieldsReportDetail();    oReportDetailFields.oName.textContent=aReportList[iReport][reportFieldName]; /* Show report name */    oReportDetailFields.oDescr.innerHTML=aReportList[iReport][reportFieldDescr].replace(/&lt;a/gi,"<b").replace(/&lt;\/a/gi,"<\/b").replace(/&lt;/g,"<"); /* Show report description */    showReportParameters(iReport);    showObj(oMainFields.oDetail);  }  function showReportParameters(iReport){  /* Show parameters fields of report aReportList[iReport] */    var aReport,sBuf="",sParamName,sParamType,sParamValues,aParamValues,iParamValues,iParamTam;    aReport=aReportList[iReport];    sParamName=aReport[reportFieldParamIni];    sBuf+=`<input type="hidden" name="ReportID" value="${aReport[reportFieldID]}">`;    for(var i=0;i<reportParams && sParamName!="";i++){ /* report parameters loop */      sParamType=aReport[reportFieldParamIni+(reportParamInfos*i)+1];      sParamValues=aReport[reportFieldParamIni+(reportParamInfos*i)+2];      iParamTam=aReport[reportFieldParamIni+(reportParamInfos*i)+3];      if(iParamTam==0)iParamTam=10;      sBuf+=`<div class="fc-report-detail-option-data"><div class="fc-dashboard-box-content-select-title">${sParamName}:</div><div class="fc-report-detail-content-elements">`;      if(sParamType=="S" || sParamType=="M"){        sBuf+=`<select name="Par${i+1}"${(sParamType=="M"?" multiple":"")} class="fc-dashboard-box-content-select-option">`;        aParamValues=sParamValues.split(";");iParamValues=aParamValues.length;        for(var j=0;j<iParamValues;j++)sBuf+=`<option value="${j}">${aParamValues[j]}</option>`;        sBuf+="<\select>";      }      else if(sParamType=="T")sBuf+=`<input type="text" name="Par${i+1}" maxlength="${iParamTam}" class="fc-report-detail-input">`; /* Text */      else if(sParamType=="D")sBuf+=`<input type="datetime-local" name="Par${i+1}" class="fc-report-detail-input">`; /* Date & time */      else if(sParamType=="B")sBuf+=`<input type="checkbox" name="Par${i+1}" value="1" class="fc-report-detail-checkbox">`;  /* Binary */      else if(sParamType=="I" || sParamType=="L" || sParamType=="R")sBuf+=`<input type="number" step="any" name="Par${i+1}" maxlength="${iParamTam}" class="fc-report-detail-input" oninput="FC360$.limitInputLength(this)">`;  /* Integer, Long or Real */          sBuf+="</div></div>";      sParamName=aReport[reportFieldParamIni+(reportParamInfos*(i+1))];    }    sBuf+=`<div class="fc-report-detail-option-data"><div class="fc-dashboard-box-content-select-title">${XYZ[44][iLang$]}:</div><div class="fc-report-detail-content-elements">`;    sBuf+=`<input type="text" name="Fields" maxlength="2048" class="fc-report-detail-input">`; /* Column names list */    sBuf+="</div></div>";    sBuf+=`<div class="fc-report-detail-option-data"><div class="fc-dashboard-box-content-select-title"><div class="fc-register-report-btn" onclick="FC360$.toggleReportPagination()"><a href="#reportpag"><span id="fc-reportdetail-pagination-modelabel">${XYZ[50][iLang$]}</span> <img src="images/icon-dashboard-renew.svg" width="20" height="20"></a></div></div><div class="fc-report-detail-content-elements">`;    sBuf+=`<div id="fc-reportdetail-pagination-fromto" class="hideObj">`;    sBuf+=`<input type="number" min="1" max="9999998" name="FromRecord" maxlength="9" class="fc-report-detail-small-input" placeholder="${XYZ[46][iLang$]}" oninput="FC360$.limitInputLength(this)">`;    sBuf+=`<input type="number" min="1" max="9999999" name="ToRecord" maxlength="9" class="fc-report-detail-small-input fc-report-detail-small-space-input" placeholder="${XYZ[47][iLang$]}" oninput="FC360$.limitInputLength(this)">`;    sBuf+="</div>";    sBuf+=`<div id="fc-reportdetail-pagination-page">`;    sBuf+=`<input type="number" min="1" max="9999998" name="Page" maxlength="6" class="fc-report-detail-small-input" placeholder="${XYZ[48][iLang$]}" oninput="FC360$.limitInputLength(this)">`;    sBuf+=`<input type="number" min="1" max="9999999" name="QtRecords" maxlength="6" class="fc-report-detail-small-input fc-report-detail-small-space-input" placeholder="${XYZ[49][iLang$]}" oninput="FC360$.limitInputLength(this)">`;    sBuf+="</div>";    sBuf+="</div></div>";    oReportDetailFields.oParams.innerHTML=sBuf;  }  function hideReportDetail(){  /* Hide current report detail and show report list */    oMainFields.oContainer.scrollIntoView();    showObj(oMainFields.oDashboardSection);    hideObj(oMainFields.oDetail);  }  function initDashBoxes(){    dashBoxes$.sDashBoxes="dashBoxes";    dashBoxes$.hasDrag=false;    if(initToggleDashes()){dashBoxes$.initDashBoxes();}  }  function initToggleDashes(){    var sLocalStorageVar="showDashes_"+ iStoreID;    var oToggleDashes=document.getElementById("idToggleDashes");    var oToggleIcon=document.getElementById("idToggleDashesSpan");    var bIsDashesOpen=!(localStorage[sLocalStorageVar]==="false");    if(bIsDashesOpen)oToggleDashes.addEventListener("click",fnToggleDashes,false);    else{      fnRotateIcon(oToggleIcon,bIsDashesOpen);      var oDashBoxes=document.getElementById("dashBoxes");      oToggleDashes.addEventListener("click",fnShowDashes,false);    }    function fnToggleDashes(){      var oDashBoxesAll=document.querySelector(".dashBoxesAll");      bIsDashesOpen=!bIsDashesOpen;      localStorage[sLocalStorageVar]=bIsDashesOpen;      fnRotateIcon(oToggleIcon,bIsDashesOpen);      if(bIsDashesOpen){        oDashBoxesAll.classList.remove("smoothHide");        oDashBoxesAll.classList.add("smoothShow");      }      else{        oDashBoxesAll.classList.remove("smoothShow");        oDashBoxesAll.classList.add("smoothHide");      }    }    function fnShowDashes(){      bIsDashesOpen=true;      localStorage[sLocalStorageVar]=true;      fnRotateIcon(oToggleIcon,true);      oToggleDashes.removeEventListener("click",fnShowDashes,false);      oToggleDashes.addEventListener("click",fnToggleDashes,false);      dashBoxes$.initDashBoxes();    }    function fnRotateIcon(oToggleIcon,bRotate){      oToggleIcon.classList.remove("rotateIcon"+(bRotate?180:0));      oToggleIcon.classList.add("rotateIcon"+(bRotate?0:180));    }    return bIsDashesOpen;  }  function URLfy(oJSON){return Object.keys(oJSON).map(function(k){return encodeURIComponent(k) +"="+ encodeURIComponent(isObject(oJSON[k])?JSON.stringify(oJSON[k]):oJSON[k])}).join("&");} /* return URL post string from JSON */  function isObject(obj){return obj!==undefined && obj!==null && obj.constructor==Object;} /* return true if object */  function cLog(...args){console.log(...args);} /* console.log */  function showObj(oDiv){oDiv.classList.add("showObj");oDiv.classList.remove("hideObj");}  function hideObj(oDiv){oDiv.classList.add("hideObj");oDiv.classList.remove("showObj");}  function limitInputLength(oField){if(oField.value.length>oField.maxLength)oField.value=oField.value.slice(0,oField.maxLength);}  function convertFromJSDate(sDate){if(sDate!="")return new Date(sDate).toLocaleString(sLocale$,{day:"numeric",month:"numeric",year:"2-digit",hour:"numeric",minute:"numeric"});else return "";}  function getTemplate(sTemplate){    var arg,s=sTemplate[0];    for(var i=1;i<arguments.length;i++){      arg=String(arguments[i]);      s+=arg.replace(/&/g, "&amp;")            .replace(/</g, "&lt;")            .replace(/>/g, "&gt;");      s+=sTemplate[i];    }    return s;  }  function callAdm360(oPost,fnCustomCallback,oParams){  /* general call to Adm360 */    var sPost=URLfy(oPost).replace(/%25/g,"%");    fnAjaxExecAdmFC(FCAdmVars$.sURLAdm360 +"/adm/Adm360.asp",sPost,true,fnCustomCallback,oParams);  }  function fnAjaxExecAdmFC(file,sParamsOri,IsPOST,fnCustomCallback,oParams){    if(navigator.onLine){      var sParams=sParamsOri.replace(/ /g,"+");      var oHTTP=new XMLHttpRequest();      oHTTP.onreadystatechange=function(){if(oHTTP.readyState==4){fnCallbackAdm360(file,sParamsOri,IsPOST,oHTTP,fnCustomCallback,oParams);}}      if(IsPOST){        oHTTP.open("POST",file,true);        oHTTP.setRequestHeader("Content-type","application/x-www-form-urlencoded");        oHTTP.send(sParams);      }      else{        oHTTP.open("GET",file +"?"+ sParams,true);        oHTTP.send("");      }    }    else setTimeout(function(){fnAjaxExecAdmFC(file,sParamsOri,IsPOST,fnCustomCallback,oParams);},FCAdmVars$.offlineRetryTime); /* if not online, call ajax again */  }  function fnCallbackAdm360(file,sParamsOri,IsPOST,oHTTP,fnCustomCallback,oParams){  /* General callback from Adm360 */    try{var oJSON=JSON.parse(oHTTP.responseText);}catch(e){var oJSON=null;}    if(oJSON){      if(oJSON.err=="ErrNotLgo")logoutUser(); /* user not logged */      else{        if(oJSON.err!="ErrOK")cLog("Adm360 returned error",oJSON.err,oJSON.errDescr);        if(fnCustomCallback)fnCustomCallback(oJSON);      }    }    else{ /* Adm360 returned blank or invalid JSON */      cLog("Bad response from Adm360",oHTTP,"navigator.onLine",navigator.onLine);      if(!navigator.onLine)setTimeout(function(){fnAjaxExecAdmFC(file,sParamsOri,IsPOST,fnCustomCallback,oParams)},FCAdmVars$.offlineRetryTime); /* If not online, call ajax again */    }  }  function temporizeLoop(iTimer,fnCallback,...params){  /* Execute fnCallback with ...params while it returns false. Wait iTimer milliseconds between execs */    if(!fnCallback(...params))setTimeout(function(){temporizeLoop(iTimer,fnCallback,...params);},iTimer);  }  function toogleAccordion(este){    este.classList.toggle("active");    var panelAccordion=este.nextElementSibling;    if(panelAccordion.style.maxHeight)panelAccordion.style.maxHeight=null;    else panelAccordion.style.maxHeight=panelAccordion.scrollHeight +"px";  }  function toggleReportPagination(){  /* Toogle of report pagination fields */    var oFromTo=document.getElementById("fc-reportdetail-pagination-fromto"),        oPage=document.getElementById("fc-reportdetail-pagination-page"),        oButLabel=document.getElementById("fc-reportdetail-pagination-modelabel");    bPaginationByPage=!bPaginationByPage;    oButLabel.innerHTML=XYZ[(bPaginationByPage?50:45)][iLang$];    oFromTo.classList.toggle("hideObj");    oPage.classList.toggle("hideObj");  }  document.addEventListener("DOMContentLoaded",main,false); /* Execute main when DOM ready */  return{    iStoreID:iStoreID,    sToken:sToken,    cLog:cLog,    limitInputLength:limitInputLength,    getTemplate:getTemplate,    sTemplateLogin:sTemplateLogin,    sTemplateMain:sTemplateMain,    sTemplateOffcanvas:sTemplateOffcanvas,    sTemplateReportList:sTemplateReportList,    sTemplateReportDetail:sTemplateReportDetail,    validateLogin:validateLogin,    filterReportList:filterReportList,    executeReport:executeReport,    logoutUser:logoutUser,    showDash:showDash,    showReportList:showReportList,    showAllReports:showAllReports,    showIDReportDetail:showIDReportDetail,    showReportDetail:showReportDetail,    hideReportDetail:hideReportDetail,    temporizeLoop:temporizeLoop,    toogleAccordion:toogleAccordion,    toggleReportPagination:toggleReportPagination  }})();